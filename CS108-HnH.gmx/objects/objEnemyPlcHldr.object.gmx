<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemyPlcHldr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize Variables
//Based on tutorial code from Shaun Spalding.
dir = -1;
moveSpd = 3;
grav = 0.6;
horizSpd = 0;
vertSpd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>horizSpd = dir * moveSpd;
vertSpd += grav;

//Horizontal collision detection.
if(place_meeting(x + horizSpd, y, objGroundPlcHldr))
{
    while(!place_meeting(x + sign(horizSpd), y, objGroundPlcHldr))
    {
        x += sign(horizSpd);
    }
    horizSpd = 0;
    
    dir *= -1; //Reverse direction after hitting wall.
}

x += horizSpd;

//Vertical collision detection.
if(place_meeting(x, y + vertSpd, objGroundPlcHldr))
{
    while(!place_meeting(x, y + sign(vertSpd), objGroundPlcHldr))
    {
        y += sign(vertSpd);
    }
    vertSpd = 0;
}
y += vertSpd;

//Enemy Collision
if(place_meeting(x,y,objPlayerPlcHldr))
{
    if(objPlayerPlcHldr.y &lt; y - 16)
    {
        //Causes player to bounce on enemy.
        with(objPlayerPlcHldr) vertSpd = -jumpSpd;
        instance_destroy();
    }
    else
    {
        game_restart();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
