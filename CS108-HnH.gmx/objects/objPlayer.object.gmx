<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
//Based on tutorial code from Shaun Spalding.
grav = 0.7;

horizSpd = 0;
horizSpd_carry = 0;
horizSpd_final = 0;
vertSpd = 0;
jumpSpd = 14;
moveSpd = 6;

hp = 4;
dirAngle = 0;

jumps = 0;
//jumpsmax = 1;

if(global.upgrade[global.UPGRADE_JUMP] == true){
    jumpsmax = 2;
}
else{
    jumpsmax = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lives Tracker.
//Reset game after three deaths.
//Otherwise, restart the room.
lives--;
if(lives &lt;= 0){
    lives = 3;
    game_restart();
}
else{
   room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Input &amp; Collision Detection
//Read player input.
//Based on tutorial code from Shaun Spalding.
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_up);

//React to player input.
move = key_left + key_right; //Move left if only left is pressed and vice versa.
horizSpd = move * moveSpd;

if keyboard_check(vk_left){
    image_xscale = -1;
    dirAngle = 180;
}
if keyboard_check(vk_right){
    image_xscale = 1;
    dirAngle = 0;
}

if(vertSpd &lt; 15) vertSpd += grav;

if(place_meeting(x,y + 1, objCollision)) //Check collision with floor.
{
    jumps = jumpsmax;
}

if(key_jump &amp;&amp; jumps &gt; 0){
    jumps -= 1;
    vertSpd = -jumpSpd;
}

horizSpd_final = horizSpd + horizSpd_carry;
horizSpd_carry = 0;

//Horizontal collision detection.
if(place_meeting(x + horizSpd_final, y, objCollision))
{
    while(!place_meeting(x + sign(horizSpd_final), y, objCollision))
    {
        x += sign(horizSpd_final);
    }
    horizSpd_final = 0;
    horizSpd = 0;
}

x += horizSpd_final;

//Vertical collision detection.
if(place_meeting(x, y + vertSpd, objCollision))
{
    while(!place_meeting(x, y + sign(vertSpd), objCollision))
    {
        y += sign(vertSpd);
    }
    vertSpd = 0;
}
y += vertSpd;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFallingRock">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_hurt</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyBullet">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_hurt</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Bullet &amp; Rate of Fire.
//Only 3 bullets can persist on the screen at a time.

if(global.upgrade[global.UPGRADE_BULLET] == false
    &amp;&amp; instance_number(objPlayerBullet) &lt; 3)
{
    instance_create(x+16, y, objPlayerBullet);
}
else if(global.upgrade[global.UPGRADE_BULLET] == true
    &amp;&amp; instance_number(objPlayerBulletUpgrade) &lt; 3)
{
    instance_create(x+16, y, objPlayerBulletUpgrade);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump Sound.
if(jumps &gt; 0) audio_play_sound(snd_jump, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
